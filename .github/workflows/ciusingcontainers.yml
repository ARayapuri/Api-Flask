name: CI with Docker

on:
  workflow_dispatch   # manual trigger, you can also add "push: branches: [ main ]"

env:
  DOCKER_IMAGE: karthikamn/my-python-api-flask

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest

    steps:
      # 1. Checkout repository
      - name: Checkout code
        uses: actions/checkout@v4

      # 2. Build Docker image
      - name: Build Docker image
        run: |
          docker build -t $DOCKER_IMAGE:${{ github.sha }} .
          docker tag $DOCKER_IMAGE:${{ github.sha }} $DOCKER_IMAGE:latest

      # 3. Login to Docker Hub
      - name: Docker Login
        run: echo "${{ secrets.DOCKERHUB_TOKEN }}" | docker login -u "${{ secrets.DOCKERHUB_USERNAME }}" --password-stdin

      # 4. Push image to Docker Hub
      - name: Push Docker image
        run: |
          docker push $DOCKER_IMAGE:${{ github.sha }}
          docker push $DOCKER_IMAGE:latest

      # 5. (Optional) Debug â€“ check username is coming from secrets
      - name: Debug DockerHub Username
        run: echo "DockerHub Username = ${{ secrets.DOCKERHUB_USERNAME }}"

      # 6. Run container locally (to test build)
      - name: Run container
        run: |
          docker run -d --name flask-python -p 5000:5000 $DOCKER_IMAGE:latest

      # 7. Setup kubectl
      - name: Setup Kubectl
        uses: azure/setup-kubectl@v4
        with:
          version: latest

      # 8. Setup minikube
      - name: Setup Minikube
        run: |
          minikube start --driver=docker
          kubectl config use-context minikube

      # 9. Deploy to Kubernetes
      - name: Deploy to Kubernetes
        run: |
          kubectl apply -f k8s/deployment.yml
          kubectl apply -f k8s/service.yml
